import sys
from PyQt5.QtWidgets import (
    QApplication, QMainWindow, QWidget, QVBoxLayout, QHBoxLayout,
    QTabWidget, QLabel, QPushButton, QListWidget, QComboBox,
    QTableWidget, QTableWidgetItem, QCheckBox, QGroupBox, QSplitter
)
from PyQt5.QtCore import Qt


class ImportTab(QWidget):
    def __init__(self):
        super().__init__()
        layout = QVBoxLayout()

        file_group = QGroupBox("–ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö")
        file_layout = QVBoxLayout()
        self.file_list_widget = QListWidget()
        self.time_column_combo = QComboBox()
        self.load_button = QPushButton("–ó–∞–≥—Ä—É–∑–∏—Ç—å")
        self.reset_button = QPushButton("–°–±—Ä–æ—Å")
        self.merge_button = QPushButton("–û–±—ä–µ–¥–∏–Ω–∏—Ç—å")

        file_layout.addWidget(QLabel("–°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤"))
        file_layout.addWidget(self.file_list_widget)
        file_layout.addWidget(QLabel("–ö–æ–ª–æ–Ω–∫–∞ –≤—Ä–µ–º–µ–Ω–∏"))
        file_layout.addWidget(self.time_column_combo)
        file_layout.addWidget(self.load_button)
        file_layout.addWidget(self.reset_button)
        file_layout.addWidget(self.merge_button)
        file_group.setLayout(file_layout)

        layout.addWidget(file_group)
        self.setLayout(layout)


class AnalysisTab(QWidget):
    def __init__(self):
        super().__init__()
        layout = QVBoxLayout()

        control_group = QGroupBox("–ê–Ω–∞–ª–∏–∑")
        control_layout = QVBoxLayout()
        self.run_button = QPushButton("–ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–ø–ø—Ä–æ–∫—Å–∏–º–∞—Ü–∏—é")
        self.update_controls_button = QPushButton("–û–±–Ω–æ–≤–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã")
        self.update_tables_button = QPushButton("–û–±–Ω–æ–≤–∏—Ç—å —Ç–∞–±–ª–∏—Ü—ã")
        self.auto_recalc_checkbox = QCheckBox("–ê–≤—Ç–æ-–ø–µ—Ä–µ—Å—á—ë—Ç")
        self.save_button = QPushButton("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ–µ–∫—Ç")
        self.load_button = QPushButton("–ó–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–æ–µ–∫—Ç")

        control_layout.addWidget(self.run_button)
        control_layout.addWidget(self.update_controls_button)
        control_layout.addWidget(self.update_tables_button)
        control_layout.addWidget(self.auto_recalc_checkbox)
        control_layout.addWidget(self.save_button)
        control_layout.addWidget(self.load_button)
        control_group.setLayout(control_layout)

        layout.addWidget(control_group)
        self.setLayout(layout)


class PlotManager(QWidget):
    def __init__(self):
        super().__init__()
        layout = QVBoxLayout()
        layout.addWidget(QLabel("–ì—Ä–∞—Ñ–∏–∫ –∫–∞–Ω–∞–ª–æ–≤"))
        layout.addWidget(QLabel("üìä –ó–¥–µ—Å—å –±—É–¥–µ—Ç –≥—Ä–∞—Ñ–∏–∫ (–∑–∞–≥–ª—É—à–∫–∞)"))
        self.setLayout(layout)


class SegmentTableHandler(QWidget):
    def __init__(self):
        super().__init__()
        layout = QVBoxLayout()
        self.segment_table = QTableWidget(4, 4)
        self.segment_table.setHorizontalHeaderLabels(["–ù–∞—á–∞–ª–æ", "–ö–æ–Ω–µ—Ü", "–¢–∏–ø", "–û—à–∏–±–∫–∞"])
        for i in range(4):
            for j in range(4):
                self.segment_table.setItem(i, j, QTableWidgetItem(f"{i}-{j}"))
        layout.addWidget(QLabel("–°–µ–≥–º–µ–Ω—Ç—ã"))
        layout.addWidget(self.segment_table)
        self.setLayout(layout)


class AnalysisSetupHandler(QWidget):
    def __init__(self):
        super().__init__()
        layout = QVBoxLayout()
        self.channel_table = QTableWidget(3, 3)
        self.channel_table.setHorizontalHeaderLabels(["–ö–∞–Ω–∞–ª", "–¢–∏–ø", "–°—Ç–∞—Ç—É—Å"])
        for i in range(3):
            self.channel_table.setItem(i, 0, QTableWidgetItem(f"–ö–∞–Ω–∞–ª {i+1}"))
            self.channel_table.setItem(i, 1, QTableWidgetItem("float"))
            self.channel_table.setItem(i, 2, QTableWidgetItem("active"))
        layout.addWidget(QLabel("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–∞–ª–æ–≤"))
        layout.addWidget(self.channel_table)
        self.setLayout(layout)


class MainWindow(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("ApproximationApp")

        tabs = QTabWidget()
        self.import_tab = ImportTab()
        self.analysis_tab = AnalysisTab()
        self.plot_manager = PlotManager()
        self.segment_table_handler = SegmentTableHandler()
        self.analysis_setup_handler = AnalysisSetupHandler()

        tabs.addTab(self.import_tab, "–ò–º–ø–æ—Ä—Ç")
        tabs.addTab(self.analysis_tab, "–ê–Ω–∞–ª–∏–∑")
        tabs.addTab(self.plot_manager, "–ì—Ä–∞—Ñ–∏–∫–∏")
        tabs.addTab(self.segment_table_handler, "–°–µ–≥–º–µ–Ω—Ç—ã")
        tabs.addTab(self.analysis_setup_handler, "–ö–∞–Ω–∞–ª—ã")

        container = QWidget()
        layout = QVBoxLayout()
        layout.addWidget(tabs)
        container.setLayout(layout)
        self.setCentralWidget(container)


if __name__ == "__main__":
    app = QApplication(sys.argv)
    window = MainWindow()
    window.show()
    sys.exit(app.exec_())