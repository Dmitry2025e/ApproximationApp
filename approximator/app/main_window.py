# –ü—É—Ç—å: approximator/app/main_window.py

from approximator.utils.log import debug

from PyQt5.QtWidgets import QMainWindow, QWidget, QVBoxLayout, QTabWidget

# –ú–æ–¥–µ–ª–∏ –∏ –≤–∏–¥–∂–µ—Ç—ã
from approximator.data_models.app_state import AppState
from approximator.ui.tabs.import_tab import ImportTab
from approximator.ui.tabs.analysis_tab import AnalysisTab
from approximator.ui.tabs.export_tab import ExportTab
from approximator.services.plot.plot_manager import PlotManager

# –°–µ—Ä–≤–∏—Å—ã
from approximator.services.data_loader import DataLoader
from approximator.services.data_merger import DataMerger
from approximator.services.approximation.polynomial_fitter import PolynomialFitter

# –ü–∞—Ä—Å–µ—Ä—ã
from approximator.file_parsers.excel_parser import ExcelParser

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ UI
from approximator.ui.handlers.import_event_handler import ImportEventHandler
from approximator.ui.handlers.analysis_handler import AnalysisEventHandler
from approximator.ui.handlers.analysis_setup_handler import AnalysisSetupHandler
from approximator.ui.handlers.segment_mouse_handler import SegmentMouseHandler
from approximator.ui.handlers.segment_table_handler import SegmentTableHandler

from approximator.ui.setup.handler_initializer import create_handlers

class MainWindow(QMainWindow):
    """–ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
    def __init__(self):
        super().__init__()

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        self.state = AppState()

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        self.setWindowTitle("–ê–ø–ø—Ä–æ–∫—Å–∏–º–∞—Ç–æ—Ä")
        self.setGeometry(100, 100, 1200, 800)
        
        # –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω—ã–π –≤–∏–¥–∂–µ—Ç –∏ layout
        self.central_widget = QWidget()
        self.setCentralWidget(self.central_widget)
        self.layout = QVBoxLayout(self.central_widget)
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å—ã
        from approximator.file_parsers.generic_csv_parser import GenericCsvParser
        from approximator.file_parsers.excel_parser import ExcelParser
        from approximator.file_parsers.adc_parser import AdcParser
        
        # –í–∞–∂–µ–Ω –ø–æ—Ä—è–¥–æ–∫: —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–∞—Ä—Å–µ—Ä—ã –¥–æ–ª–∂–Ω—ã –∏–¥—Ç–∏ –ø–µ—Ä–µ–¥ –æ–±—â–∏–º–∏
        self.data_loader = DataLoader([
            AdcParser(),      # –ü–∞—Ä—Å–µ—Ä –¥–ª—è —Ñ–∞–π–ª–æ–≤ –ê–¶–ü
            ExcelParser(),    # –ü–∞—Ä—Å–µ—Ä –¥–ª—è Excel
            GenericCsvParser() # –û–±—â–∏–π –ø–∞—Ä—Å–µ—Ä CSV (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–º)
        ])
        self.data_merger = DataMerger()
        self.fitter = PolynomialFitter()

        # –°–æ–∑–¥–∞–µ–º –≤–∫–ª–∞–¥–∫–∏
        self.tabs = QTabWidget()
        self.import_tab = ImportTab(self)
        self.analysis_tab = AnalysisTab(self)
        self.export_tab = ExportTab(self)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤–∫–ª–∞–¥–∫–∏
        self.tabs.addTab(self.import_tab, "–ò–º–ø–æ—Ä—Ç")
        self.tabs.addTab(self.analysis_tab, "–ê–Ω–∞–ª–∏–∑")
        self.tabs.addTab(self.export_tab, "–≠–∫—Å–ø–æ—Ä—Ç")
        self.layout.addWidget(self.tabs)
        
        # –û—Ç–∫–ª—é—á–∞–µ–º –≤–∫–ª–∞–¥–∫–∏ –∞–Ω–∞–ª–∏–∑–∞ –∏ —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–æ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
        self.tabs.setTabEnabled(1, False)
        self.tabs.setTabEnabled(2, False)
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º plot_manager
        self.plot_manager = PlotManager(self.analysis_tab.plot_widget)
        
        # –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        create_handlers(self)
        # —Å–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        from  approximator.services.project_state_controller import ProjectStateController
        self.project_controller = ProjectStateController(self)
        try:
            self.project_controller.load_project("state.json")
            debug("[MainWindow] ‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        except Exception as e:
            debug(f"[MainWindow] ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {e}")

    def request_recalculation(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–µ—Ä–µ—Å—á–µ—Ç –∞–ø–ø—Ä–æ–∫—Å–∏–º–∞—Ü–∏–π."""
        print("[request_recalculation] Requesting recalculation")
        if hasattr(self, 'segment_table_handler'):
            self.segment_table_handler._fit_segments()  # –¢–æ–ª—å–∫–æ –ø–µ—Ä–µ—Å—á–µ—Ç, –±–µ–∑ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI

    def closeEvent(self, event):
        """–ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
        try:
            self.project_controller.save_project("state.json")
            print("[MainWindow] üíæ –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ")
        except Exception as e:
            print(f"[MainWindow] ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è: {e}")
        event.accept()

